<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.github.fish56.messageboard.entity.User">

    <resultMap id="forUser" type="User">
        <result column="phone_number" property="phoneNumber"/>
        <result column="create_datetime" property="createDatetime"/>
        <result column="update_datetime" property="updateDatetime"/>
    </resultMap>

    <select id="selectOneUser" parameterType="User" resultMap="forUser">
        select * from users where username = #{ username };
    </select>

    <!--<select id="selectOneByTokenUser" parameterType="String" resultMap="forUser">-->
        <!--select * from users where token = #{ String };-->
    <!--</select>-->

    <select id="selectManyUsers" parameterType="User" resultMap="forUser">
        select * from users
        <where>
            true
            <if test="username != null">
                and username = #{username}
            </if>
            <if test="password != null">
                and password = #{password}
            </if>
            <if test="token != null">
                and token = #{token}
            </if>
            <if test="phoneNumber != null">
                and phone_number = #{phoneNumber}
            </if>
            <if test="createDatetime != null">
                <![CDATA[
                 AND create_datetime < #{createDatetime}
              ]]>
            </if>
            limit 20;
        </where>
    </select>
    <insert id="insertOneUser" parameterType="User">
        insert into users(username, password,token, email, phone_number)
          values (#{username}, #{password}, #{token}, #{email}, #{phoneNumber})
    </insert>

    <!-- update user info, name is primary key and unchangeable-->
    <update id="updateOneUser" parameterType="User">
        update users
        <set>
            <if test="password != null">
                password = #{password},
            </if>
            <if test="token != null">
                token = #{token},
            </if>
            <if test="email != null">
                email = #{email},
            </if>
            <if test="phoneNumber != null">
                phone_number = #{phoneNumber},
            </if>
        </set>
        where username = #{username}
    </update>

    <delete id="deleteOneUser" parameterType="User">
        delete from users where username = #{ username };
    </delete>

</mapper>